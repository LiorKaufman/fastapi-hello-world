on: [push]
name: Linux_Container_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Build and push image"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
      - name: "Deploy to Web app service in Azure"
      - uses: azure/webapps-deploy@v2
        with:
          app-name: 'fastapi-app-v3-v2'
          publish-profile: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.RESOURCE_GROUP }} 
          environment-variables: JWT_REFRESH_SECRET_KEY=${{secrets.JWT_REFRESH_SECRET_KEY}} JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}} SERVER_NAME=${{secrets.SERVER_NAME}} DATABASE=${{secrets.DATABASE}}
      # - name: "Deploy to Azure Container Instances"
      #   uses: "azure/aci-deploy@v1"
      #   with:
      #     resource-group: ${{ secrets.RESOURCE_GROUP }}
      #     dns-name-label: ${{ secrets.RESOURCE_GROUP }}
      #     image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
      #     registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
      #     registry-username: ${{ secrets.REGISTRY_USERNAME }}
      #     registry-password: ${{ secrets.REGISTRY_PASSWORD }}
      #     name: fastapi-sampleapp
      #     cpu: 1
      #     # memory: 0.5
      #     location: "west us"
      #     environment-variables: JWT_REFRESH_SECRET_KEY=${{secrets.JWT_REFRESH_SECRET_KEY}} JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}} SERVER_NAME=${{secrets.SERVER_NAME}} DATABASE=${{secrets.DATABASE}}
      #     restart-policy: Never
